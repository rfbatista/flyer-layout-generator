-- Add value to enum type: "template_type"
ALTER TYPE "template_type" ADD VALUE 'adaptation';
-- Create enum type "adaptation_batch_status"
CREATE TYPE "adaptation_batch_status" AS ENUM ('pending', 'started', 'rendering_images', 'finished', 'error', 'canceled', 'unknown');
-- Create enum type "layout_job_status"
CREATE TYPE "layout_job_status" AS ENUM ('pending', 'started', 'rendering_images', 'finished', 'error', 'closed', 'unknown');
-- Create enum type "renderer_job_status"
CREATE TYPE "renderer_job_status" AS ENUM ('pending', 'started', 'rendering_images', 'finished', 'error', 'unknown');
-- Create enum type "replication_batch_status"
CREATE TYPE "replication_batch_status" AS ENUM ('pending', 'started', 'rendering_images', 'finished', 'error', 'closed', 'unknown');
-- Create "adaptation_batch" table
CREATE TABLE "adaptation_batch" ("id" bigserial NOT NULL, "layout_id" integer NULL, "design_id" integer NULL, "request_id" integer NULL, "user_id" integer NULL, "status" "adaptation_batch_status" NULL, "started_at" timestamp NULL, "finished_at" timestamp NULL, "error_at" timestamp NULL, "stopped_at" timestamp NULL, "updated_at" timestamp NULL, "created_at" timestamp NULL DEFAULT CURRENT_TIMESTAMP, "config" text NULL, "log" text NULL, PRIMARY KEY ("id"), CONSTRAINT "adaptation_batch_layout_id_fkey" FOREIGN KEY ("layout_id") REFERENCES "layout" ("id") ON UPDATE CASCADE ON DELETE CASCADE, CONSTRAINT "adaptation_batch_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "users" ("id") ON UPDATE CASCADE ON DELETE CASCADE);
-- Create "layout_jobs" table
CREATE TABLE "layout_jobs" ("id" bigserial NOT NULL, "layout_id" integer NULL, "template_id" integer NULL, "adaptation_batch_id" integer NULL, "replication_batch_id" integer NULL, "status" "layout_job_status" NOT NULL DEFAULT 'pending', "attempts" integer NOT NULL DEFAULT 0, "started_at" timestamp NULL, "finished_at" timestamp NULL, "error_at" timestamp NULL, "created_at" timestamp NULL DEFAULT CURRENT_TIMESTAMP, "log" text NULL, PRIMARY KEY ("id"), CONSTRAINT "layout_jobs_adaptation_batch_id_fkey" FOREIGN KEY ("adaptation_batch_id") REFERENCES "adaptation_batch" ("id") ON UPDATE CASCADE ON DELETE CASCADE, CONSTRAINT "layout_jobs_layout_id_fkey" FOREIGN KEY ("layout_id") REFERENCES "layout" ("id") ON UPDATE CASCADE ON DELETE CASCADE, CONSTRAINT "layout_jobs_replication_batch_id_fkey" FOREIGN KEY ("replication_batch_id") REFERENCES "templates" ("id") ON UPDATE CASCADE ON DELETE CASCADE, CONSTRAINT "layout_jobs_template_id_fkey" FOREIGN KEY ("template_id") REFERENCES "templates" ("id") ON UPDATE CASCADE ON DELETE CASCADE);
-- Create "renderer_jobs" table
CREATE TABLE "renderer_jobs" ("id" bigserial NOT NULL, "layout_id" integer NULL, "image_id" integer NULL, "adaptation_id" integer NULL, "status" "renderer_job_status" NOT NULL DEFAULT 'pending', "attempts" integer NOT NULL DEFAULT 0, "started_at" timestamp NULL, "finished_at" timestamp NULL, "error_at" timestamp NULL, "created_at" timestamp NULL DEFAULT CURRENT_TIMESTAMP, "log" text NULL, PRIMARY KEY ("id"), CONSTRAINT "renderer_jobs_adaptation_id_fkey" FOREIGN KEY ("adaptation_id") REFERENCES "adaptation_batch" ("id") ON UPDATE CASCADE ON DELETE CASCADE, CONSTRAINT "renderer_jobs_image_id_fkey" FOREIGN KEY ("image_id") REFERENCES "images" ("id") ON UPDATE CASCADE ON DELETE CASCADE, CONSTRAINT "renderer_jobs_layout_id_fkey" FOREIGN KEY ("layout_id") REFERENCES "layout" ("id") ON UPDATE CASCADE ON DELETE CASCADE);
-- Create "replication_batch" table
CREATE TABLE "replication_batch" ("id" bigserial NOT NULL, "layout_id" integer NULL, "design_id" integer NULL, "user_id" integer NULL, "status" "replication_batch_status" NULL, "started_at" timestamp NULL, "finished_at" timestamp NULL, "error_at" timestamp NULL, "stopped_at" timestamp NULL, "updated_at" timestamp NULL, "created_at" timestamp NULL DEFAULT CURRENT_TIMESTAMP, "config" text NULL, "log" text NULL, PRIMARY KEY ("id"), CONSTRAINT "replication_batch_layout_id_fkey" FOREIGN KEY ("layout_id") REFERENCES "layout" ("id") ON UPDATE CASCADE ON DELETE CASCADE, CONSTRAINT "replication_batch_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "users" ("id") ON UPDATE CASCADE ON DELETE CASCADE);
