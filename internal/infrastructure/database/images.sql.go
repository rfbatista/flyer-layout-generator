// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: images.sql

package database

import (
	"context"
)

const listImagesGenerated = `-- name: ListImagesGenerated :many
SELECT id, url, photoshop_id, template_id, created_at FROM images
OFFSET $1 LIMIT $2
`

type ListImagesGeneratedParams struct {
	Offset int32 `json:"offset"`
	Limit  int32 `json:"limit"`
}

func (q *Queries) ListImagesGenerated(ctx context.Context, arg ListImagesGeneratedParams) ([]Image, error) {
	rows, err := q.db.Query(ctx, listImagesGenerated, arg.Offset, arg.Limit)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Image
	for rows.Next() {
		var i Image
		if err := rows.Scan(
			&i.ID,
			&i.Url,
			&i.PhotoshopID,
			&i.TemplateID,
			&i.CreatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
