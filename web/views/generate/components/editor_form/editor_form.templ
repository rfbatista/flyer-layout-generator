package editorform

import "fmt"
import "algvisual/internal/entities"

type EditorFormProps struct {
	Files      []entities.DesignFile
	DesignID   int32
	Template   []entities.Template
	Types      []string
	Layout     entities.Layout
	Layoutjson string
}

templ EditorForm(props EditorFormProps) {
	<script type="module" src="https://cdn.jsdelivr.net/npm/@shoelace-style/shoelace@2.15.1/cdn/components/switch/switch.js"></script>
	<div class="box">
		<label for="editor-switch" class="inline-flex min-w-[14rem] cursor-pointer items-center justify-between gap-3 rounded-xl border border-slate-300 bg-slate-100 px-4 py-2 dark:border-slate-700 dark:bg-slate-800">
			<input id="editor-switch" type="checkbox" class="peer sr-only" role="switch"/>
			<span class="trancking-wide text-sm font-medium text-slate-700 peer-checked:text-black peer-disabled:cursor-not-allowed peer-disabled:opacity-70 dark:text-slate-300 dark:peer-checked:text-white">
				Habilitar editor
			</span>
			<div class="relative h-6 w-11 after:h-5 after:w-5 peer-checked:after:translate-x-5 rounded-full border border-slate-300 bg-white after:absolute after:bottom-0 after:left-[0.0625rem] after:top-0 after:my-auto after:rounded-full after:bg-slate-700 after:transition-all after:content-[''] peer-checked:bg-blue-700 peer-checked:after:bg-slate-100 peer-focus:outline peer-focus:outline-2 peer-focus:outline-offset-2 peer-focus:outline-slate-800 peer-focus:peer-checked:outline-blue-700 peer-active:outline-offset-0 peer-disabled:cursor-not-allowed peer-disabled:opacity-70 dark:border-slate-700 dark:bg-slate-900 dark:after:bg-slate-300 dark:peer-checked:bg-blue-600 dark:peer-checked:after:bg-slate-100 dark:peer-focus:outline-slate-300 dark:peer-focus:peer-checked:outline-blue-600" aria-hidden="true"></div>
		</label>
	</div>
	<div id="editor-form-container" class="hide">
		<form
			id="editor-form"
			class="form"
			hx-encoding="multipart/form-data"
			hx-post="/editor/create/image"
			hx-swap="none"
			data-layout-id={ fmt.Sprintf("%d", props.Layout.ID) }
			data-design-id={ fmt.Sprintf("%d", props.DesignID) }
		>
			<div class="stack generation-form__files">
				<select id="tipo_componente">
					for _, t := range props.Types {
						<option value={ t }>{ t }</option>
					}
				</select>
				<sl-button id="group-items-btn" size="small" type="button">Criar component</sl-button>
			</div>
		</form>
		<div class="stack">
			<div class="box">
				<label class="form-label">Camadas</label>
				<div id="editor-form-camadas" class="stack"></div>
			</div>
		</div>
	</div>
}
