// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.680
package toast

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

func RequestToast() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<section id=\"toast-container\"></section><script type=\"text/javascript\">\n    const Toast = Swal.mixin({\n      toast: true,\n      position: 'center',\n      iconColor: 'white',\n      customClass: {\n        popup: 'colored-toast',\n      },\n      showConfirmButton: false,\n      timer: 1500,\n      timerProgressBar: true,\n    })\n    document.body.addEventListener(\"makeToast\", async function(evt){\n      if(evt.detail.level == \"success\"){\n        await Toast.fire({\n          icon: 'success',\n          title: 'Sucesso',\n        })\n      } else {\n        await Toast.fire({\n          icon: 'error',\n          title: evt.detail.message,\n        })\n      }\n    })\n  </script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
